/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DevLayoutImport } from './routes/dev/_layout'
import { Route as DevLayoutIndexImport } from './routes/dev/_layout.index'

// Create Virtual Routes

const DevImport = createFileRoute('/dev')()
const AnotherLazyImport = createFileRoute('/another')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const DevRoute = DevImport.update({
  path: '/dev',
  getParentRoute: () => rootRoute,
} as any)

const AnotherLazyRoute = AnotherLazyImport.update({
  path: '/another',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/another.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DevLayoutRoute = DevLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DevRoute,
} as any)

const DevLayoutIndexRoute = DevLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => DevLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/another': {
      id: '/another'
      path: '/another'
      fullPath: '/another'
      preLoaderRoute: typeof AnotherLazyImport
      parentRoute: typeof rootRoute
    }
    '/dev': {
      id: '/dev'
      path: '/dev'
      fullPath: '/dev'
      preLoaderRoute: typeof DevImport
      parentRoute: typeof rootRoute
    }
    '/dev/_layout': {
      id: '/dev/_layout'
      path: '/dev'
      fullPath: '/dev'
      preLoaderRoute: typeof DevLayoutImport
      parentRoute: typeof DevRoute
    }
    '/dev/_layout/': {
      id: '/dev/_layout/'
      path: '/'
      fullPath: '/dev/'
      preLoaderRoute: typeof DevLayoutIndexImport
      parentRoute: typeof DevLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  AnotherLazyRoute,
  DevRoute: DevRoute.addChildren({
    DevLayoutRoute: DevLayoutRoute.addChildren({ DevLayoutIndexRoute }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/another",
        "/dev"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/another": {
      "filePath": "another.lazy.tsx"
    },
    "/dev": {
      "filePath": "dev",
      "children": [
        "/dev/_layout"
      ]
    },
    "/dev/_layout": {
      "filePath": "dev/_layout.tsx",
      "parent": "/dev",
      "children": [
        "/dev/_layout/"
      ]
    },
    "/dev/_layout/": {
      "filePath": "dev/_layout.index.tsx",
      "parent": "/dev/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
